/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.ModuloRegistrarEntrada;

import DTOs.ProveedorDTO;
import Exception.InventarioException;
import Exception.NegocioException;
import GUI.Aplicacion;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class SeleccionarProveedor extends javax.swing.JPanel {
    private Aplicacion control;
    private ProveedorDTO proveedorSeleccionado;
    /**
     * Creates new form ProveedorSeleccionado
     */
    public SeleccionarProveedor(Aplicacion control) throws InventarioException {
        this.control = control;
        initComponents();
        campoBusqueda.setToolTipText("Buscar por ID o nombre de proveedor");
        cargarTabla();
        setVisible(true);
    }
//    
//    public void crearTablaProveedores() throws NegocioException{
//        String columnasTabla[] = {"Nombre","Telefono"};
//        tablaProveedores.setRowHeight(25);
//        DefaultTableModel modelo = new DefaultTableModel(columnasTabla, 0) {
//        @Override
//            public boolean isCellEditable(int row, int column) {
//                return false;
//            }
//        };
//        for(ProveedorDTO proveedor : control.cargarProveedores()){
//            modelo.addRow(new Object[]{
////              proveedor.getId(),
//                proveedor.getNombre(),
//                proveedor.getTelefono()}
//            );
//        }
//        tablaProveedores.setModel(modelo);
//        tablaProveedores.setRowSelectionAllowed(true);
//        tablaProveedores.setColumnSelectionAllowed(false);
//        tablaProveedores.getTableHeader().setReorderingAllowed(false);
//        tablaProveedores.getTableHeader().setResizingAllowed(false);
//        panelTablaProveedores.setViewportView(tablaProveedores);
//
//    }
        public void cargarTabla() throws InventarioException {
        List<ProveedorDTO> listaProveedores;
        try {
            listaProveedores = control.cargarProveedores();
            DefaultTableModel model = (DefaultTableModel) tablaProveedores.getModel();
            model.setRowCount(0);
            
            for (ProveedorDTO proveedor : listaProveedores) {
                Object[] fila = new Object[]{
                    proveedor.getNombre(),
                    proveedor.getTelefono()
                };
                model.addRow(fila);
            }
        } catch (InventarioException ex) {
            throw new InventarioException("Error al cargar Proveedores");
        }

    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelSeleccionProv = new javax.swing.JLabel();
        labelProveedor = new javax.swing.JLabel();
        campoBusqueda = new javax.swing.JTextField();
        labelIndicaciones = new javax.swing.JLabel();
        panelTablaProveedores = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();

        setToolTipText("");

        labelSeleccionProv.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        labelSeleccionProv.setText("Seleccion de Proveedor");

        labelProveedor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelProveedor.setText("Buscar Proveedor:");

        labelIndicaciones.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelIndicaciones.setText("**Puedes buscar por ID o nombre de proveedor**");

        tablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProveedoresMouseClicked(evt);
            }
        });
        panelTablaProveedores.setViewportView(tablaProveedores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelIndicaciones)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelProveedor)
                                    .addGap(291, 291, 291)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(campoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(panelTablaProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(labelSeleccionProv)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelSeleccionProv)
                .addGap(18, 18, 18)
                .addComponent(labelIndicaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelProveedor)
                    .addComponent(campoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(panelTablaProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablaProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProveedoresMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            try { 
                proveedorSeleccionado = control.cargarProveedores().get(tablaProveedores.getSelectedRow());
                obtenerProveedor();
                control.mostrarVentanaSeleccionarProductosEntrada();
            } catch (InventarioException ex) {
                Logger.getLogger(SeleccionarProveedor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NegocioException ex) {
                Logger.getLogger(SeleccionarProveedor.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_tablaProveedoresMouseClicked

    public void obtenerProveedor(){
        control.setProveedor(proveedorSeleccionado);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoBusqueda;
    private javax.swing.JLabel labelIndicaciones;
    private javax.swing.JLabel labelProveedor;
    private javax.swing.JLabel labelSeleccionProv;
    private javax.swing.JScrollPane panelTablaProveedores;
    private javax.swing.JTable tablaProveedores;
    // End of variables declaration//GEN-END:variables
    
 
}

